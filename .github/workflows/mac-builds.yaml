name: macOS build
on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  macintel:
    name: macOS (Intel)
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Dependencies
        run: ./ci/osx-package.deps.sh
        env:
          MACOS_ARCH: "x86_64"
          MAC_CERT_B64: ${{ secrets.MAC_CERT_B64 }}
          MAC_CODESIGN_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}

      - uses: jcelerier/import-codesign-certs@master
        with:
          p12-file-base64: ${{ secrets.MAC_CERT_B64 }}
          p12-password: ${{ secrets.MAC_CERT_PASSWORD }}

      - name: Build
        run: ./ci/osx-package.build.sh
        env:
          MACOS_ARCH: "x86_64"

      - run: |
          export GITTAGNOV=$(echo "$GITHUB_REF" | sed "s/.*\///;s/^v//")
          export BUILD_ARTIFACTSTAGINGDIRECTORY=$PWD/staging
          mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY
          source ci/osx-package.deploy.sh
        env:
          MACOS_ARCH: "x86_64"
          MAC_ALTOOL_PASSWORD: ${{ secrets.MAC_ALTOOL_PASSWORD }}

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: macos-intel
          path: |
            staging/*.*

      - name: Continuous
        uses: softprops/action-gh-release@v2
        if: github.event_name != 'pull_request'
        with:
          name: "Continuous"
          tag_name: "continuous"
          body: ""
          append_body: true
          generate_release_notes: false
          files: |
            staging/*.*

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
        with:
          body: ""
          append_body: true
          generate_release_notes: false
          files: |
            staging/*.*

  brew:
    # Last X86 macos version supported by GH Actions
    name: macOS (Release, Brew, Intel)
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Dependencies
        run: |
          ./ci/osx-brew.deps.sh

      - name: Build
        run: |
          ./ci/osx-brew.build.sh

  brew-m1:
    name: macOS (Release, Brew, AppleSilicon)
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '>=16'

      - name: Dependencies
        run: |
          ./ci/osx-brew.deps.sh

      - name: Build
        run: |
          ./ci/osx-brew.build.sh

  brew-m1-dev:
    name: macOS (Dev, Brew, AppleSilicon)
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '>=16'

      - name: Dependencies
        run: |
          ./ci/osx-brew.deps.sh

      - name: Build
        run: |
          ./ci/developer.build.sh -S "$PWD" -B build-developer

  m1-package:
    name: macOS (AppleSilicon Release)
    runs-on: macos-15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '>=16'

      - run: |
          source ci/osx-package.deps.sh
        env:
          MACOS_ARCH: "aarch64"
          MAC_CERT_B64: ${{ secrets.MAC_CERT_B64 }}
          MAC_CODESIGN_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}

      - uses: jcelerier/import-codesign-certs@master
        with:
          p12-file-base64: ${{ secrets.MAC_CERT_B64 }}
          p12-password: ${{ secrets.MAC_CERT_PASSWORD }}

      - run: |
          source ci/osx-package.build.sh
        env:
          MACOS_ARCH: "aarch64"

      - run: |
          export GITTAGNOV=$(echo "$GITHUB_REF" | sed "s/.*\///;s/^v//")
          export BUILD_ARTIFACTSTAGINGDIRECTORY=$PWD/staging
          mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY
          source ci/osx-package.deploy.sh
        env:
          MACOS_ARCH: "aarch64"
          MAC_ALTOOL_PASSWORD: ${{ secrets.MAC_ALTOOL_PASSWORD }}

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: macos-aarch64
          path: |
            staging/*.*

      - name: Continuous
        uses: softprops/action-gh-release@v2
        if: github.event_name != 'pull_request'
        with:
          name: "Continuous"
          tag_name: "continuous"
          body: ""
          append_body: true
          generate_release_notes: false
          files: |
            staging/*.*

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
        with:
          body: ""
          append_body: true
          generate_release_notes: false
          files: |
            staging/*.*
